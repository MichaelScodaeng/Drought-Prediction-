# config_ConvLSTM.yaml
# Configuration file for the grid-based ConvLSTM model

project_setup:
  experiment_name: "SPEI_ConvLSTM_Global_Run"
  target_variable: "spei"
  random_seed: 42

data:
  raw_data_path: "data/full.csv"
  time_column: "time"
  lat_column: "lat"
  lon_column: "lon"
  # Features that will be placed onto the grid for each time step
  features_to_grid: [
      'spei', 'tmp', 'dtr', 'cld', 'tmx', 
      'tmn', 'wet', 'vap', 'soi', 
      'dmi', 'pdo', 'nino4', 
      'nino34', 'nino3', 'pre', 'pet'
    ]
  # Dates for splitting the final gridded tensor
  train_end_date: "2017-12-31"
  validation_end_date: "2020-12-31"

gridding:
  # This tells the grid_utils.py script the native resolution of your data
  fixed_step: 0.5 

sequence_params:
  # These define the "window" for the ConvLSTM model
  n_steps_in: 12      # How many past months (time depth) to use as input
  n_steps_out: 1      # How many months to predict into the future

convlstm_params:
  batch_size: 8       # Batch size for ConvLSTM can be smaller due to memory usage
  
  trainer:
    max_epochs: 2
    patience_for_early_stopping: 5
    accelerator: "auto"
    enable_progress_bar: True
  
  tuning:
    n_trials: 15      # Number of Optuna trials to run
    learning_rate: {low: 1.0e-6, high: 1.0e-5, log: True}
    # --- ConvLSTM Specific Hyperparameters ---
    hidden_channels: {choices: [16, 32, 64]} # Number of channels in the hidden state
    n_layers: {low: 1, high: 3}
    kernel_size: {choices: [3, 5]} # Kernel size for convolutional operations
        
paths:
  models_base_dir: "models_saved" 

results:
  output_base_dir: "run_outputs" 
  metrics_filename: "global_convlstm_metrics.json"
  predictions_filename: "global_convlstm_full_predictions.csv"
  config_filename: "config_used_for_run.yaml"

